# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'VentanaConcesionario.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt, QSortFilterProxyModel
from PyQt5.QtGui import QStandardItemModel, QStandardItem
from src.modelo.vo.PlantillaTrabajadorVO import PlantillaTrabajadorVO


class Ui_MainWindow5(object):
    def __init__(self, coord=None):
        self.coordinador = coord
        self.rojo = "#ff0000"
        self.verde = "#00FF00"
        #self.textoIncorrecto = "Revisa el formato"
        #self.error = "Error al añadir o modicar un concesionario"
        #self.error2 = "Revisa el nombre"
        self.completado = "Accion completada con exito"


    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1240, 720)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(0, 0, 1240, 720))
        #self.label.setStyleSheet("background-image: url(:/direccion/nissan_skyline_gt_r_r34-HD2.jpg);")
        self.label.setText("")
        #self.label.setPixmap(QtGui.QPixmap(":/direccion/nissan_skyline_gt_r_r34-HD2.jpg"))
        self.label.setScaledContents(False)
        self.label.setObjectName("label")

        self.aniadirTra = QtWidgets.QPushButton(self.centralwidget)
        self.aniadirTra.setGeometry(QtCore.QRect(40, 650, 151, 41))
        self.aniadirTra.setObjectName("aniadirTra")
        
        self.eliminarTra = QtWidgets.QPushButton(self.centralwidget)
        self.eliminarTra.setGeometry(QtCore.QRect(230, 650, 151, 41))
        self.eliminarTra.setObjectName("eliminarTra")
        
        self.atras = QtWidgets.QPushButton(self.centralwidget)
        self.atras.setGeometry(QtCore.QRect(1160, 650, 51, 51))
        self.atras.setStyleSheet("#atras{\n"
"border-image: url(:/direccion/botonAtrasBlanco.png);\n"
"background-color: transparent;\n"
"background: none;\n"
"border: none;\n"
"background-repeat: none;\n"
"}\n"
"#atras:pressed{\n"
"border-image: url(:/direccion/bottonAtrasBlancoAzul.jpg);\n"
"background-color: transparent;\n"
"background: none;\n"
"border: none;\n"
"background-repeat: none;\n"
"}")
        self.atras.setText("")
        self.atras.setObjectName("atras")
        self.atras.setToolTip("Atras")
        
        self.ModificarTra = QtWidgets.QPushButton(self.centralwidget)
        self.ModificarTra.setGeometry(QtCore.QRect(420, 650, 151, 41))
        self.ModificarTra.setObjectName("ModificarTra")
        
        self.BuscarTra = QtWidgets.QPushButton(self.centralwidget)
        self.BuscarTra.setGeometry(QtCore.QRect(620, 650, 151, 41))
        self.BuscarTra.setObjectName("BuscarTra")
        
        self.frameAniaidir = QtWidgets.QFrame(self.centralwidget)
        self.frameAniaidir.setEnabled(True)
        self.frameAniaidir.setGeometry(QtCore.QRect(360, 30, 520, 541))
        self.frameAniaidir.setStyleSheet("background-color: #282e2a;\n"
"border-radius: 20px;")
        self.frameAniaidir.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frameAniaidir.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frameAniaidir.setObjectName("frameAniaidir")

        self.IDtrabajador = QtWidgets.QLabel(self.frameAniaidir)
        self.IDtrabajador.setGeometry(QtCore.QRect(26, 10, 220, 50))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.IDtrabajador.setFont(font)
        self.IDtrabajador.setObjectName("DNI")
        
        self.LineaID = QtWidgets.QLineEdit(self.frameAniaidir)
        self.LineaID.setGeometry(QtCore.QRect(26, 70, 220, 31))
        self.LineaID.setStyleSheet("background-color:white;\n"
"\n"
"border: 2px solid gray;\n"
"border-radius: 10px; /* Ajusta el radio según tus preferencias */\n"
"padding: 5px; /* Opcional: ajusta el espaciado interior */\n"
"\n"
"")
        
        self.Contrasenia = QtWidgets.QLabel(self.frameAniaidir)
        self.Contrasenia.setGeometry(QtCore.QRect(26, 110, 220, 50))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Contrasenia.setFont(font)
        self.Contrasenia.setObjectName("Contra")
        
        self.LineaContra = QtWidgets.QLineEdit(self.frameAniaidir)
        self.LineaContra.setGeometry(QtCore.QRect(26, 170, 220, 31))
        self.LineaContra.setStyleSheet("background-color:white;\n"
"\n"
"border: 2px solid gray;\n"
"border-radius: 10px; /* Ajusta el radio según tus preferencias */\n"
"padding: 5px; /* Opcional: ajusta el espaciado interior */\n"
"\n"
"")
        self.LineaContra.setEchoMode(QtWidgets.QLineEdit.Password)
        self.LineaContra.setText("")
        self.LineaContra.setObjectName("LineaContra")


        self.Nombre = QtWidgets.QLabel(self.frameAniaidir)
        self.Nombre.setGeometry(QtCore.QRect(26, 210, 220, 50))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Nombre.setFont(font)
        self.Nombre.setObjectName("Nombre")
        
        self.LineaNombre = QtWidgets.QLineEdit(self.frameAniaidir)
        self.LineaNombre.setGeometry(QtCore.QRect(26, 270, 220, 31))
        self.LineaNombre.setStyleSheet("background-color:white;\n"
"\n"
"border: 2px solid gray;\n"
"border-radius: 10px; /* Ajusta el radio según tus preferencias */\n"
"padding: 5px; /* Opcional: ajusta el espaciado interior */\n"
"\n"
"")
        self.LineaNombre.setText("")
        self.LineaNombre.setObjectName("LineaNombre")
        
        self.Apellido1 = QtWidgets.QLabel(self.frameAniaidir)
        self.Apellido1.setGeometry(QtCore.QRect(26, 310, 220, 50))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Apellido1.setFont(font)
        self.Apellido1.setObjectName("Apellido1")
        
        self.LineaApellido1 = QtWidgets.QLineEdit(self.frameAniaidir)
        self.LineaApellido1.setGeometry(QtCore.QRect(26, 370, 220, 31))
        self.LineaApellido1.setStyleSheet("background-color:white;\n"
"\n"
"border: 2px solid gray;\n"
"border-radius: 10px; /* Ajusta el radio según tus preferencias */\n"
"padding: 5px; /* Opcional: ajusta el espaciado interior */\n"
"\n"
"")
        self.LineaApellido1.setText("")
        self.LineaApellido1.setObjectName("LineaApellido1")
        
        self.Apellido2 = QtWidgets.QLabel(self.frameAniaidir)
        self.Apellido2.setGeometry(QtCore.QRect(273, 10, 220, 50))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Apellido2.setFont(font)
        self.Apellido2.setObjectName("Apellido2")
        
        self.LineaApellido2 = QtWidgets.QLineEdit(self.frameAniaidir)
        self.LineaApellido2.setGeometry(QtCore.QRect(273, 70, 220, 31))
        self.LineaApellido2.setStyleSheet("background-color:white;\n"
"\n"
"border: 2px solid gray;\n"
"border-radius: 10px; /* Ajusta el radio según tus preferencias */\n"
"padding: 5px; /* Opcional: ajusta el espaciado interior */\n"
"\n"
"")
        self.LineaApellido2.setText("")
        self.LineaApellido2.setObjectName("LineaApellido2")

        self.Sueldo = QtWidgets.QLabel(self.frameAniaidir)
        self.Sueldo.setGeometry(QtCore.QRect(273, 110, 220, 50))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Sueldo.setFont(font)
        self.Sueldo.setObjectName("Sueldo")
        
        self.LineaSueldo = QtWidgets.QLineEdit(self.frameAniaidir)
        self.LineaSueldo.setGeometry(QtCore.QRect(273, 170, 220, 31))
        self.LineaSueldo.setStyleSheet("background-color:white;\n"
"\n"
"border: 2px solid gray;\n"
"border-radius: 10px; /* Ajusta el radio según tus preferencias */\n"
"padding: 5px; /* Opcional: ajusta el espaciado interior */\n"
"\n"
"")
        self.LineaSueldo.setText("")
        self.LineaSueldo.setObjectName("LineaSueldo")
        
        self.Rol = QtWidgets.QLabel(self.frameAniaidir)
        self.Rol.setGeometry(QtCore.QRect(273, 210, 241, 50))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Rol.setFont(font)
        self.Rol.setObjectName("Rol")

        self.LineaRol = QtWidgets.QLineEdit(self.frameAniaidir)
        self.LineaRol.setGeometry(QtCore.QRect(273, 270, 220, 31))
        self.LineaRol.setStyleSheet("background-color:white;\n"
"\n"
"border: 2px solid gray;\n"
"border-radius: 10px; /* Ajusta el radio según tus preferencias */\n"
"padding: 5px; /* Opcional: ajusta el espaciado interior */\n"
"\n"
"")
        self.LineaRol.setText("")
        self.LineaRol.setObjectName("LineaRol")

        self.Concesionario = QtWidgets.QLabel(self.frameAniaidir)
        self.Concesionario.setGeometry(QtCore.QRect(273, 310, 241, 50))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Concesionario.setFont(font)
        self.Concesionario.setObjectName("Concesionario")

        self.LineaConc = QtWidgets.QLineEdit(self.frameAniaidir)
        self.LineaConc.setGeometry(QtCore.QRect(273, 370, 220, 31))
        self.LineaConc.setStyleSheet("background-color:white;\n"
"\n"
"border: 2px solid gray;\n"
"border-radius: 10px; /* Ajusta el radio según tus preferencias */\n"
"padding: 5px; /* Opcional: ajusta el espaciado interior */\n"
"\n"
"")
        self.LineaConc.setText("")
        self.LineaConc.setObjectName("LineaConc")

        self.botonAniadirModificar = QtWidgets.QPushButton(self.frameAniaidir)
        self.botonAniadirModificar.setGeometry(QtCore.QRect(210, 500, 100, 30))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.botonAniadirModificar.setFont(font)
        self.botonAniadirModificar.setStyleSheet("border: 2px solid white;\n"
"border-radius: 10px; /* Ajusta el radio según tus preferencias */\n"
"color: white;")
        self.botonAniadirModificar.setText("")
        self.botonAniadirModificar.setObjectName("AniadirModificar")
        
        self.Incorrecto = QtWidgets.QLabel(self.frameAniaidir)
        self.Incorrecto.setEnabled(True)
        self.Incorrecto.setGeometry(QtCore.QRect(10, 460, 281, 21))
        self.Incorrecto.setObjectName("Incorrecto")
        
        
        
        



        #FRAME 2 HECHO UNICAMENTE PARA EL BOTON ELIMINAR
        self.frame2 = 2
        self.frame2 = QtWidgets.QFrame(self.centralwidget)
        self.frame2.setEnabled(True)
        self.frame2.setGeometry(QtCore.QRect(460, 30, 301, 300))
        self.frame2.setStyleSheet("background-color: #282e2a;\n"
"border-radius: 20px;")
        self.frame2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame2.setObjectName("frame2")
        
        self.botonEliminar = QtWidgets.QPushButton(self.frame2)
        self.botonEliminar.setGeometry(QtCore.QRect(100, 250, 100, 30))
        font = QtGui.QFont()
        font.setBold(True)
        font.setWeight(75)
        self.botonEliminar.setText("Eliminar")
        self.botonEliminar.setFont(font)
        self.botonEliminar.setStyleSheet("border: 2px solid white;\n"
"border-radius: 10px; /* Ajusta el radio según tus preferencias */\n"
"color: white;")
        
        self.Nombre2 = QtWidgets.QLabel(self.frame2)
        self.Nombre2.setGeometry(QtCore.QRect(40, 20, 220, 50))
        font = QtGui.QFont()
        font.setPointSize(14)
        self.Nombre2.setFont(font)
        self.Nombre2.setObjectName("DNI")

        self.LineaNombre2 = QtWidgets.QLineEdit(self.frame2)
        self.LineaNombre2.setGeometry(QtCore.QRect(40, 90, 220, 31))
        self.LineaNombre2.setStyleSheet("background-color:white;\n"
"\n"
"border: 2px solid gray;\n"
"border-radius: 10px; /* Ajusta el radio según tus preferencias */\n"
"padding: 5px; /* Opcional: ajusta el espaciado interior */\n"
"\n"
"")
        self.LineaNombre2.setText("")
        self.LineaNombre2.setObjectName("LineaNombre2")

        self.Incorrecto2 = QtWidgets.QLabel(self.frame2)
        self.Incorrecto2.setEnabled(True)
        self.Incorrecto2.setGeometry(QtCore.QRect(10, 220, 281, 21))
        self.Incorrecto2.setObjectName("Incorrecto2")
        self.Incorrecto2.setVisible(False)
        
        # Creación del QTableView para mostrar las columnas de la base de datos
        self.tableView = QtWidgets.QTableView(self.centralwidget)
        self.tableView.setGeometry(QtCore.QRect(100, 10, 600, 250))
        self.tableView.setObjectName("tableView")

        # Barra de búsqueda
        self.searchBar = QtWidgets.QLineEdit(self.centralwidget)
        self.searchBar.setGeometry(QtCore.QRect(383, 200, 220, 31))
        self.searchBar.setPlaceholderText("Buscar...")
        self.searchBar.setStyleSheet("background-color:white;\n"
                                     "border: 2px solid gray;\n"
                                     "border-radius: 10px;\n"
                                     "padding: 5px;")
        self.searchBar.setObjectName("searchBar")

        # Configuración del modelo de la tabla
        self.model = QStandardItemModel()
        self.proxy_model = QSortFilterProxyModel()
        self.proxy_model.setSourceModel(self.model)
        self.proxy_model.setFilterKeyColumn(-1)  # Filtrar en todas las columnas
        self.proxy_model.setFilterCaseSensitivity(Qt.CaseInsensitive)

        self.tableView.setModel(self.proxy_model)

        MainWindow.setCentralWidget(self.centralwidget)

        #check box del modo oscuro, igual que el de ventanaAdmin
        self.checkBox = QtWidgets.QCheckBox(self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(10, 10, 141, 61))
        self.checkBox.setChecked(True)
        self.checkBox.setObjectName("checkBox")
        self.checkBox.stateChanged.connect(self.modoClOs)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        self.modoClOs()
        self.visible()
        #self.mostrasConcesionarios()
       
        




    def visible(self):
        self.frameAniaidir.setVisible(False)
        self.frame2.setVisible(False)
        self.tableView.setVisible(False)
        self.searchBar.setVisible(False)
        
        self.aniadirTra.clicked.connect(self.toggle_frame_visibility)
        self.aniadirTra.clicked.connect(lambda: self.actualizarBotonFrame("Añadir"))

        self.eliminarTra.clicked.connect(self.frame2_visibility)
        #self.eliminarCon.clicked.connect(lambda: self.actualizarBotonFrame("Eliminar"))

        self.ModificarTra.clicked.connect(self.toggle_frame_visibility)
        self.ModificarTra.clicked.connect(lambda: self.actualizarBotonFrame("Modificar"))

        

    def toggle_frame_visibility(self):
        if self.frame2.isVisible(): 
            self.frame2_visibility()
        elif self.tableView.isVisible():
            self.tablaYbusquedaVisibilidad()
        current_visibility = self.frameAniaidir.isVisible()
        self.frameAniaidir.setVisible(not current_visibility)
        
 
    def frame2_visibility(self):
        if self.frameAniaidir.isVisible():
            self.toggle_frame_visibility()
        elif self.tableView.isVisible():
            self.tablaYbusquedaVisibilidad()
        current_visibility = self.frame2.isVisible()
        self.frame2.setVisible(not current_visibility)

    def tablaYbusquedaVisibilidad(self):
        if self.frameAniaidir.isVisible():
            self.toggle_frame_visibility()
        elif self.frame2.isVisible(): 
            self.frame2_visibility()
        current_visibility = self.tableView.isVisible()
        self.tableView.setVisible(not current_visibility)
        self.searchBar.setVisible(not current_visibility)

    def actualizarBotonFrame(self, palabra):
        self.botonAniadirModificar.setText(palabra)
    

    def setCoordinador(self, coord):
        self.coordinador = coord
    

    def estilosOscuro(self, lista):
        for i in lista:
            i.setStyleSheet("QPushButton {\n"
            "    background-color: transparent;\n"
            "    border: 2px solid white;\n"
            "    color: white;\n"
            "    border-radius: 10px;\n"
            "}\n"
                "QPushButton:pressed {"
                "background-color: #2980b9;"
            "}"
            )

        
    def actualizarTextoIncorrecto2(self,incorrecto, color, nuevo_texto):
        estilo_html = "<html><head/><body><p align=\"center\"><span style=\" color:{};\">{}</span></p></body></html>"
        incorrecto.setText(QtCore.QCoreApplication.translate("MainWindow", estilo_html.format(color, nuevo_texto)))

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Trabajadores"))
        self.aniadirTra.setText(_translate("MainWindow", "Añadir trabajador"))
        self.eliminarTra.setText(_translate("MainWindow", "Eliminar trabajador"))
        self.ModificarTra.setText(_translate("MainWindow", "Modificar trabajador"))
        self.BuscarTra.setText(_translate("MainWindow", "Buscar trabajador"))
        self.IDtrabajador.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600; color:#ffffff;\">IDtrabajador:</span></p></body></html>"))
        self.Contrasenia.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600; color:#ffffff;\">Contrasenia:</span></p></body></html>"))
        self.Nombre.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600; color:#ffffff;\">Nombre:</span></p></body></html>"))
        self.Apellido1.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600; color:#ffffff;\">Apellido1:</span></p></body></html>"))
        self.Apellido2.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600; color:#ffffff;\">Apellido2:</span></p></body></html>"))
        self.Sueldo.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600; color:#ffffff;\">Sueldo:</span></p></body></html>"))
        self.Rol.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600; color:#ffffff;\">Rol:</span></p></body></html>"))
        self.Concesionario.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600; color:#ffffff;\">Concesionario:</span></p></body></html>"))
        self.Nombre2.setText(_translate("MainWindow", "<html><head/><body><p><span style=\" font-weight:600; color:#ffffff;\">Nombre:</span></p></body></html>"))
        self.checkBox.setText(_translate("MainWindow", "Modo oscuro"))



    def obtener_datos_ingresados(self):
        anadirModificar = PlantillaTrabajadorVO(
           IDtrabajador=self.LineaID.text(),
           Contraseña=self.LineaContra.text(),
           Nombre=self.LineaNombre.text(),
           Apellido1=self.LineaApellido1.text(),
           Apellido2=self.LineaApellido2.text(),
           Sueldo=self.LineaSueldo.text(),
           Rol=self.LineaRol.text(),
           Concesionario=self.LineaConc.text()
        )

        eliminar = PlantillaTrabajadorVO(
            IDtrabajador=self.LineaNombre2.text()
        )
        
        
        if anadirModificar.Nombre != "":
            if self.botonAniadirModificar.text() == "Añadir":
                a = self.coordinador.registrarTrabajador(anadirModificar, "aniadir") 
                if a[0] == "Error":
                    self.actualizarTextoIncorrecto2(self.Incorrecto, self.rojo, a[1])
                    self.Incorrecto.setVisible(True)
                else:
                    self.actualizarTextoIncorrecto2(self.Incorrecto, self.verde, self.completado)
                    self.Incorrecto.setVisible(True)
                    
            elif self.botonAniadirModificar.text() == "Modificar":
                a = self.coordinador.registrarTrabajador(anadirModificar, "modificar")
                if a[0] == "Error":
                    self.actualizarTextoIncorrecto2(self.Incorrecto, self.rojo, a[1])
                    self.Incorrecto.setVisible(True)
                else:
                    self.actualizarTextoIncorrecto2(self.Incorrecto, self.verde, self.completado)
                    self.Incorrecto.setVisible(True) 
            
            self.LineaID.setText("")
            self.LineaContra.setText("")
            self.LineaNombre.setText("")
            self.LineaApellido1.setText("")
            self.LineaApellido2.setText("")
            self.LineaSueldo.setText("")
            self.LineaRol.setText("")
            self.LineaConc.setText("")
            


        if eliminar.Nombre != "":
            a = self.coordinador.registrarTrabajador(eliminar, "eliminar")
            #print(a)
            if a[0] == "Error":
                self.actualizarTextoIncorrecto2(self.Incorrecto2, self.rojo, a[1])
                self.Incorrecto2.setVisible(True)
                
            else:
                self.actualizarTextoIncorrecto2(self.Incorrecto2, self.verde, self.completado)
                self.Incorrecto2.setVisible(True)
                #self.mostrasConcesionarios()
            
            self.LineaNombre2.setText("")

        
        

    def mostrarTrabajadores(self):
        self.model.removeRows(0, self.model.rowCount())
        #IDtrabajador, Contrasenia, Nombre, Apellido1, Apellido2, Sueldo, Rol, Concesionario
        a = self.coordinador.obtenerTrabajadores()
        #print(a)
        columnas = ["IDtrabajador", "Contrasenia", "Nombre", "Apellido1", "Apellido2", "Sueldo", "Rol", "Concesionario"]
        self.model.setHorizontalHeaderLabels(columnas)
        for fila in a:
            items = [
                QStandardItem(fila['IDtrabajador']),
                QStandardItem(fila['Contrasenia']),
                QStandardItem(fila['Nombre']),
                QStandardItem(fila['Apellido1']),
                QStandardItem(fila['Apellido2']),
                QStandardItem(fila['Sueldo']),
                QStandardItem(fila['Rol']),
                QStandardItem(fila['Concesionario']),
            ]
            self.model.appendRow(items)

        # Actualizar la vista
        self.tableView.resizeColumnsToContents()

        # Conectar la barra de búsqueda con el filtro del modelo
        self.searchBar.textChanged.connect(self.proxy_model.setFilterRegExp)



    #BOTON MODO OSCURO
    def modoClOs(self):
        if self.checkBox.isChecked(): #modo oscuro
            self.label.setStyleSheet("background-image: url(:/direccion/nissan_skyline_gt_r_r34-HD2.jpg);")
            self.label.setPixmap(QtGui.QPixmap("nissan_skyline_gt_r_r34-HD2.jpg"))
            self.estilosOscuro([self.aniadirTra, self.eliminarTra, self.BuscarTra, self.ModificarTra, self.botonEliminar, self.Nombre2, self.botonAniadirModificar])
            #self.setAtras()
            self.checkBox.setStyleSheet("QCheckBox::indicator {\n"
                            "    width: 25px;\n"
                            "    height: 25px;\n"
                            "    text-align: right;\n"
                            "}\n"
                            "QCheckBox {\n"
                            "    font-size: 16px; /* Tamaño de la letra en píxeles */\n"
                            "    font-weight: bold;\n"
                            "    color: white;\n"
                            "}")
            
        else: #modo claro
            self.label.setStyleSheet("background-image: url(:/direccion/nissanGtrClaro.jpg);")
            self.label.setPixmap(QtGui.QPixmap("nissanGtrClaro.jpg"))
            #self.estilosClaro([self.Concesionario, self.Cliente, self.Trabajador, self.Taller, self.Almacen])
            #self.setAtras()
            self.checkBox.setStyleSheet("QCheckBox::indicator {\n"
                            "    width: 25px;\n"
                            "    height: 25px;\n"
                            "    text-align: right;\n"
                            "}\n"
                            "QCheckBox {\n"
                            "    font-size: 16px; /* Tamaño de la letra en píxeles */\n"
                            "    font-weight: bold;\n"
                            "    color: black;\n"
                            "}")
            
            
        